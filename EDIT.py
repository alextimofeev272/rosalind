#coding: utf_8
#найти расстояние редактирования
#возможные операции: удаление,вставка,замена
#все операции стоят одинаково
#такое расстояние называется расстояние Левенштейна
#используется алгоритм Нидлмана - Вунша
import numpy

s1 = 'ATATCCG'
s1 = 'TCCG'
s1 = 'ATGTACTG'
s2 = 'ATGTCTG'
n = (len(s1)+1)#создаем матрицу на 1 больше
m = (len(s2)+1)#1 элемент матрицы - пустая строка
B = numpy.array([[0]*n]*m)

for i in range(n):#перевод в пустую строку стоит столько сколько элементов в строки
    B[0][i] = i
for i in range(m):#так как их можно только удалить.
    B[i][0] = i
#B[i-1][j]+1 добавляем символ в первую строку
#B[i][j-1]+1 добавляем символ во вторую строку
#B[i-1][j-1]+1 заменяем символы
for j in range(1,n):
    for i in range(1,m):
        if s1[j-1]<>s2[i-1]:
            B[i][j] = min(B[i-1][j]+1,B[i][j-1]+1,B[i-1][j-1]+1)
        else:
            B[i][j] = min(B[i-1][j]+1,B[i][j-1]+1,B[i-1][j-1])

print B
print B[m-1][n-1]


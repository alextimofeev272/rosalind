#coding: utf_8
#верояность что в популяции N индивид.
#в которой m доминатных аллель Изначально наблюдать k рецесивных алллель через g поколений
#модель Райта-Фишера: вероятнось p = m/2*N
#Количество рецесивных аллель в g поколение,зависит от кол. в g-1 которое зависит от кол. в g-2
#поэтому будем использовать цепь Маркова: http://ru.wikipedia.org/wiki/Цепь_Маркова
import math

N,m,g,k=7,9,5,5

#вычисление вероятности по биноминальному распределению
def binom(n, k, p):
    #math.pow(a,b) = a**b
    prob = math.factorial(n)/(math.factorial(k)*math.factorial(n-k))*math.pow(p,k) * math.pow(1-p,n-k)
    return prob

old=[0]*(2*N+1)#вероятности что j из 2*N+1 доминантные в прошлом поколение
new=[0]*(2*N+1)#вероятности что j из 2*N+1 доминантные в настоящем поколение
old[m]=1#вероятность что m равна 1 по начальным условиям

for g in xrange(1,g+1):#подсчитываем в каждом поколение до g
    for i in xrange(0,2*N+1):
        p=0
        for j in xrange(0,2*N+1):
            #binom(2*N,i,(float(j)/(2*N))) - вероятность i копий
            #где (j)/(2*N) - вероятность одной копии
            p+=old[j]*binom(2*N,i,(float(j)/(2*N)))
        new[i]=p
    old=list(new)
    
p=0
for i in xrange(0,2*N-k+1):#вероятность того что к рецесивных и 2*N-k доминант.
    p+=new[i]
print(round(p,3))


